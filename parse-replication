#!/usr/bin/perl

use POSIX;
use XML::Parser;

sub handle_start {
	my ($expat, $element, @tags) = @_;
	my %tags = @tags;

	if ($element eq "node") {
		$lat = $tags{'lat'};
		$lon = $tags{'lon'};
		$id = $tags{'id'};

		if (defined($lat) && defined($lon)) {
			$lat{$id} = $lat;
			$lon{$id} = $lon;
		}
	} elsif ($element eq "way") {
		@nodes = ();

		$highway = 0;
		$building = 0;
		$theway = $tags{'id'};
	} elsif ($element eq "nd") {
		push @nodes, $tags{'ref'};
	} elsif ($element eq "tag") {
		if ($tags{'k'} eq "building") {
			$building = 1;
		} elsif ($tags{'k'} eq "highway") {
			$highway = 1;
		}
	}
}

sub handle_char {
	my ($expat, $string) = @_;
}

sub handle_end {
	my ($expat, $element) = @_;

	if ($element eq "way") {
		for ($i = 0; $i < $#nodes; $i++) {
			if (defined($lat{$nodes[$i]}) && defined($lat{$nodes[$i + 1]})) {
				print "$lat{$nodes[$i]},$lon{$nodes[$i]} ";
				print "$lat{$nodes[$i + 1]},$lon{$nodes[$i + 1]} ";

				if ($highway) {
					print "8:0 ";
				} elsif ($building) {
					print "8:1 ";
				} else {
					print "8:6 ";
				}

				print "// $nodes[$i] $theway\n";
			}
		}
	}
}

if ($#ARGV < 0) {
	$parser = new XML::Parser(Handlers => { Start => \&handle_start,
						End   => \&handle_end,
						Char  => \&handle_char,
					      });

	$parser->parse(*STDIN);
} else {
	for $file (@ARGV) {
		$oldwhen = 0;

		$parser = new XML::Parser(Handlers => { Start => \&handle_start,
							End   => \&handle_end,
							Char  => \&handle_char,
						      });

		$parser->parsefile($file);
	}
}
